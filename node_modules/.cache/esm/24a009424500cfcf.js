let express,sqlite3,sqlite,dirname,fileURLToPath,addProductToStore,updateProductInStore,updateProductName,updateProductType,updateProductDescription,updateProductCost,updateProductStatus,deleteProductFromStore,loadProducts,displayProducts,setFilterMenu,setList;_450‍.w("express",[["default",["express"],function(v){express=v}]]);_450‍.w("sqlite3",[["default",["sqlite3"],function(v){sqlite3=v}]]);_450‍.w("sqlite",[["default",["sqlite"],function(v){sqlite=v}]]);_450‍.w("path",[["default",["dirname"],function(v){dirname=v}]]);_450‍.w("url",[["default",["fileURLToPath"],function(v){fileURLToPath=v}]]);_450‍.w("./public/js/back-end/product-manager.mjs",[["addProductToStore",["addProductToStore"],function(v){addProductToStore=v}],["updateProductInStore",["updateProductInStore"],function(v){updateProductInStore=v}],["updateProductName",["updateProductName"],function(v){updateProductName=v}],["updateProductType",["updateProductType"],function(v){updateProductType=v}],["updateProductDescription",["updateProductDescription"],function(v){updateProductDescription=v}],["updateProductCost",["updateProductCost"],function(v){updateProductCost=v}],["updateProductStatus",["updateProductStatus"],function(v){updateProductStatus=v}],["deleteProductFromStore",["deleteProductFromStore"],function(v){deleteProductFromStore=v}],["loadProducts",["loadProducts"],function(v){loadProducts=v}],["displayProducts",["displayProducts"],function(v){displayProducts=v}],["setFilterMenu",["setFilterMenu"],function(v){setFilterMenu=v}],["setList",["setList"],function(v){setList=v}]]);
const app = express();










const __dirname = dirname(fileURLToPath(_450‍._.meta.url));
const port = 4200;

let products = [];
let db = null;

app.use(express.static(__dirname + '/public'));

app.get('/', (req, res) => {
    res.sendFile(__dirname + '/index.html');
});

app.listen(port, (error) => {
    if (error)
    {
        return _450‍.g.console.log("Something went wrong!", error);
    }
    _450‍.g.console.log("Server is listening on ", port);
});